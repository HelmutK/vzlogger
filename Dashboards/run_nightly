#!/bin/bash

export LANG=en_US.UTF-8
export CTEST="/usr/bin/ctest"

echo "Running ctest"


${CTEST} -V -VV -S ${HOME}/vzlogger/Dashboards/VZLoggerNightly.cmake,CTEST_PUSH_PACKAGES=1,TARGET_ARCH=ar71xx
${CTEST} -V -VV -S ${HOME}/vzlogger/Dashboards/VZLoggerNightly.cmake,CTEST_PUSH_PACKAGES=1,
${CTEST} -V -VV -S ${HOME}/vzlogger/Dashboards/VZLoggerNightly.cmake,compiler=clang
${CTEST} -V -VV -S ${HOME}/vzlogger/Dashboards/VZLoggerNightly.cmake,ENABLE_SML=Off,ENABLE_LOCAL=Off
${CTEST} -V -VV -S ${HOME}/vzlogger/Dashboards/VZLoggerNightly.cmake,ENABLE_SML=Off,ENABLE_LOCAL=On
${CTEST} -V -VV -S ${HOME}/vzlogger/Dashboards/VZLoggerNightly.cmake,ENABLE_SML=On,ENABLE_LOCAL=Off

for toolchain in `find ${HOME}/x-tools/ -name Toolchain-RaspberryPi.cmake`
do
   echo "Compiling with toolchain ${toolchain}"
   ${CTEST} -V -VV -S ${HOME}/vzlogger/Dashboards/VZLoggerNightly.cmake,_toolchain_file=${toolchain}
done

${CTEST} -V -VV -S ${HOME}/vzlogger/Dashboards/VZLoggerCoverage.cmake
${CTEST} -V -VV -S ${HOME}/vzlogger/Dashboards/VZLoggerCoverage.cmake,compiler=clang

# compiliere alle xx-dev branches
allBranches=`git branch -a | grep remotes | sed -e 's%remotes/origin/%%' | grep '.*[-_]dev$' `
for branch in ${allBranches}
do
  echo ${CTEST} -V -VV -S ${dir}/VZLoggerNightly.cmake,_git_branch=${branch}
  ${CTEST} -V -VV -S ${dir}/VZLoggerNightly.cmake,_git_branch=${branch}
  # ${CTEST} -V -VV -S ${dir}/VZLoggerContinuous.cmake,_git_branch=${branch}
  ${CTEST} -V -VV -S ${dir}/VZLoggerCoverage.cmake,_git_branch=${branch}
  ${CTEST} -V -VV -S ${dir}/VZLoggerCoverage.cmake,_git_branch=${branch},ENABLE_SML=Off,ENABLE_LOCAL=Off
  ${CTEST} -V -VV -S ${dir}/VZLoggerCoverage.cmake,_git_branch=${branch},compiler=clang
  for toolchain in `find ${HOME}/x-tools/ -name Toolchain-RaspberryPi.cmake`
  do
     echo "Compiling with toolchain ${toolchain}"
     ${CTEST} -V -VV -S ${dir}/VZLoggerNightly.cmake,_git_branch=${branch},_toolchain_file=${toolchain}
  done
done
